#include<iostream>
using namespace std;

/*
export PROG=member-func.cpp;  g++ $PROG && ./a.out
*/
class Box {
 public:
	int *p;
	double l, b, h;
	double getVolume(void);
	 Box(double l, double b, double h);
	 Box(double l);
	 Box(const Box & b);	// copy constuctor
	~Box();			// destructor do not take parameters !
};

Box::Box(double l, double b1, double h1) {
	cout << "3 args constructor" << endl;
	this->l = l;
	b = b1;
	h = h1;
}

Box::Box(double l1) {
	cout << "1 args constructor" << endl;
}

Box::Box(const Box & b) {
	cout << "copy constructor " << endl;
}

Box::~Box() {
	cout << "Destroyed" << this << endl;
}

double Box::getVolume(void) {
	double volume;
	volume = l * b * h;
	return volume;
}

void display(const Box &b) {
    cout << "display" << endl;

}

int main(int argc, char *argv[]) {
	Box b1(2, 3, 4);
	Box b2(2);
	Box b3 = b2;
	cout << b1.getVolume() << endl;
    display(b1);
	return 0;
}
